# -*- coding: utf-8 -*-
"""SEIR pada Hepatitis_662023007

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fVgwUIc0bPhoecN5EaAHm_u1XN1SVpel
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

# Parameter
beta = 0.2          #Laju penularan
lambda1 = 0.0012    #Laju infeksi individu rentan tanpa vaksin
lambda2 = 0.00092   #Laju penyakit bawaan
lambda3 = 0.00092   #Laju kesembuhan setelah perawatan
mu = 0.00012        #Laju kematian alami
mui = 0.125         #Laju kematian akibat infeksi
v = 0.083           #Laju individu yang kebal karena vaksin
alpha = 0.00092     #Lamanya perawatan
a = 0.021           #Laju kelahiran

# Sistem persamaan diferensial SEIR
def seir_model(y, t, beta, lambda1, lambda2, lambda3, mu, mui, v, alpha, a):
    S, E, I, R = y
    dS = a + v*R - (beta + lambda1 + mu) * S
    dE = beta*S - (alpha + lambda2 + mu) * E
    dI = lambda1*S + lambda2*E - (lambda3 + mu + mui) * I
    dR = alpha*E + lambda3*I - (v + mu) * R
    return [dS, dE, dI, dR]

# Waktu simulasi (30 bulan)
t = np.linspace(0, 30, 300)

# Kondisi awal
S0 = 36476  #Populasi rentan
E0 = 3323   #Populasi terpapar
I0 = 48     #Populasi terinfeksi
R0 = 37     #Populasi sembuh
initial_conditions = [S0, E0, I0, R0]

# Simulasi dengan odeint
solution = odeint(seir_model, initial_conditions, t, args=(beta, lambda1, lambda2, lambda3, mu, mui, v, alpha, a))
S, E, I, R = solution.T

# Plot hasil
plt.figure(figsize=(8, 6))
plt.plot(t, S, 'blue', label='Susceptible')
plt.plot(t, E, 'green', label='Exposed')
plt.plot(t, I, 'red', label='Infected')
plt.plot(t, R, 'yellow', label='Recovered')
plt.xlabel('Waktu (bulan)', fontsize=12)
plt.ylabel('Jumlah individu', fontsize=12)
plt.title('Grafik Penyebaran Penyakit Hepatitis', fontsize=14)
plt.legend()
plt.grid(True)
plt.show()